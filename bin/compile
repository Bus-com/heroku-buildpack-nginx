#!/usr/bin/env bash

set -e

# clean up leaking environment
unset GIT_DIR

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_DIR="$(dirname "$(dirname "$0")")"

mkdir -p "$BUILD_DIR/bin/"
mkdir -p "$BUILD_DIR/nginx"
tar -zxvf "nginx-$STACK".tgz -C "$BUILD_DIR/nginx"

echo "-----> nginx-buildpack: Installing libsxg"
sudo apt install -y libssl-dev
wget https://github.com/google/libsxg/releases/download/v0.2/libsxg0_0.2-1_amd64.deb
wget https://github.com/google/libsxg/releases/download/v0.2/libsxg-dev_0.2-1_amd64.deb
sudo dpkg -i libsxg0_0.2-1_amd64.deb
sudo dpkg -i libsxg-dev_0.2-1_amd64.deb

echo "-----> nginx-buildpack: Installing libnginx-mod-http-sxg-filter"
wget https://github.com/google/nginx-sxg-module/releases/download/v0.1/libnginx-mod-http-sxg-filter_1.15.9-0ubuntu1.1_amd64.deb
sudo dpkg -i libnginx-mod-http-sxg-filter_1.15.9-0ubuntu1.1_amd64.deb

cp "$BUILD_DIR/nginx/nginx" "$BUILD_DIR/bin/nginx"
cp "$BUILD_DIR/nginx/nginx-debug" "$BUILD_DIR/bin/nginx-debug"

nginx_version=$($BUILD_DIR/bin/nginx -V 2>&1 | head -1 | awk '{ print $NF }')
echo "-----> nginx-buildpack: Installed ${nginx_version} to app/bin"
cp bin/start-nginx "$BUILD_DIR/bin/"
echo '-----> nginx-buildpack: Added start-nginx to app/bin'
cp bin/start-nginx-debug "$BUILD_DIR/bin/"
echo '-----> nginx-buildpack: Added start-nginx-debug to app/bin'
cp bin/start-nginx-solo "$BUILD_DIR/bin/"
echo '-----> nginx-buildpack: Added start-nginx-solo to app/bin'

mkdir -p "$BUILD_DIR/config"

if [[ ! -f $BUILD_DIR/config/mime.types ]]; then
	cp "$BUILD_DIR/nginx/mime.types" "$BUILD_DIR/config/"
	echo '-----> nginx-buildpack: Default mime.types copied to app/config/'
else
	echo '-----> nginx-buildpack: Custom mime.types found in app/config.'
fi

if [[ ! -f $BUILD_DIR/config/nginx.conf.erb ]]; then
	cp config/nginx.conf.erb "$BUILD_DIR/config/"
	echo '-----> nginx-buildpack: Default config copied to app/config.'
else
	echo '-----> nginx-buildpack: Custom config found in app/config.'
fi

# cleanup
rm -r "$BUILD_DIR/nginx"

exit 0
